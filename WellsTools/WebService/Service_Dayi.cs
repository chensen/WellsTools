//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

// 
// 此源代码由 wsdl 自动生成, Version=4.6.1055.0。
// 

namespace Wells.WebService
{


    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name = "ServiceSoap", Namespace = "http://192.168.2.3/asrs_test/")]
    public partial class Service_Dayi : System.Web.Services.Protocols.SoapHttpClientProtocol
    {

        private System.Threading.SendOrPostCallback set_tait_fqctestOperationCompleted;

        private System.Threading.SendOrPostCallback set_taid_fqctestOperationCompleted;

        private System.Threading.SendOrPostCallback set_tais_fqctestOperationCompleted;

        private System.Threading.SendOrPostCallback set_tais_aoitestOperationCompleted;

        private System.Threading.SendOrPostCallback get_invtrnOperationCompleted;

        private System.Threading.SendOrPostCallback get_wipqtyOperationCompleted;

        private System.Threading.SendOrPostCallback get_invbatOperationCompleted;

        private System.Threading.SendOrPostCallback get_invmasOperationCompleted;

        private System.Threading.SendOrPostCallback get_cdrqtyOperationCompleted;

        private System.Threading.SendOrPostCallback set_invautoOperationCompleted;

        private System.Threading.SendOrPostCallback get_statsOperationCompleted;

        private System.Threading.SendOrPostCallback send_mailOperationCompleted;

        private System.Threading.SendOrPostCallback set_plactmchOperationCompleted;

        private System.Threading.SendOrPostCallback Set_getplparmOperationCompleted;

        /// <remarks/>
        public Service_Dayi()
        {
            this.Url = "http://192.168.2.3/asrs_test/Service.asmx";
        }

        /// <remarks/>
        public event set_tait_fqctestCompletedEventHandler set_tait_fqctestCompleted;

        /// <remarks/>
        public event set_taid_fqctestCompletedEventHandler set_taid_fqctestCompleted;

        /// <remarks/>
        public event set_tais_fqctestCompletedEventHandler set_tais_fqctestCompleted;

        /// <remarks/>
        public event set_tais_aoitestCompletedEventHandler set_tais_aoitestCompleted;

        /// <remarks/>
        public event get_invtrnCompletedEventHandler get_invtrnCompleted;

        /// <remarks/>
        public event get_wipqtyCompletedEventHandler get_wipqtyCompleted;

        /// <remarks/>
        public event get_invbatCompletedEventHandler get_invbatCompleted;

        /// <remarks/>
        public event get_invmasCompletedEventHandler get_invmasCompleted;

        /// <remarks/>
        public event get_cdrqtyCompletedEventHandler get_cdrqtyCompleted;

        /// <remarks/>
        public event set_invautoCompletedEventHandler set_invautoCompleted;

        /// <remarks/>
        public event get_statsCompletedEventHandler get_statsCompleted;

        /// <remarks/>
        public event send_mailCompletedEventHandler send_mailCompleted;

        /// <remarks/>
        public event set_plactmchCompletedEventHandler set_plactmchCompleted;

        /// <remarks/>
        public event Set_getplparmCompletedEventHandler Set_getplparmCompleted;

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://192.168.2.3/asrs_test/set_tait_fqctest", RequestNamespace = "http://192.168.2.3/asrs_test/", ResponseNamespace = "http://192.168.2.3/asrs_test/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string set_tait_fqctest(
                    string usr,
                    string pwd,
                    string makeno,
                    System.DateTime chkdats,
                    System.DateTime chkdate,
                    string itnbr,
                    string fixnr,
                    string ridno,
                    int chkqty,
                    int ng1,
                    int ng2,
                    int ng3,
                    int ng4,
                    int ng5,
                    int ng6,
                    int ng7,
                    int ng8,
                    int ng9,
                    int ng10,
                    int ng11,
                    int ng12,
                    int ng13,
                    int ng14,
                    int ng15,
                    int ng16,
                    int ng17,
                    int ng18,
                    int ng19,
                    int ng20,
                    int ng21,
                    string chkusr,
                    string cls,
                    string actmch)
        {
            object[] results = this.Invoke("set_tait_fqctest", new object[] {
                    usr,
                    pwd,
                    makeno,
                    chkdats,
                    chkdate,
                    itnbr,
                    fixnr,
                    ridno,
                    chkqty,
                    ng1,
                    ng2,
                    ng3,
                    ng4,
                    ng5,
                    ng6,
                    ng7,
                    ng8,
                    ng9,
                    ng10,
                    ng11,
                    ng12,
                    ng13,
                    ng14,
                    ng15,
                    ng16,
                    ng17,
                    ng18,
                    ng19,
                    ng20,
                    ng21,
                    chkusr,
                    cls,
                    actmch});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult Beginset_tait_fqctest(
                    string usr,
                    string pwd,
                    string makeno,
                    System.DateTime chkdats,
                    System.DateTime chkdate,
                    string itnbr,
                    string fixnr,
                    string ridno,
                    int chkqty,
                    int ng1,
                    int ng2,
                    int ng3,
                    int ng4,
                    int ng5,
                    int ng6,
                    int ng7,
                    int ng8,
                    int ng9,
                    int ng10,
                    int ng11,
                    int ng12,
                    int ng13,
                    int ng14,
                    int ng15,
                    int ng16,
                    int ng17,
                    int ng18,
                    int ng19,
                    int ng20,
                    int ng21,
                    string chkusr,
                    string cls,
                    string actmch,
                    System.AsyncCallback callback,
                    object asyncState)
        {
            return this.BeginInvoke("set_tait_fqctest", new object[] {
                    usr,
                    pwd,
                    makeno,
                    chkdats,
                    chkdate,
                    itnbr,
                    fixnr,
                    ridno,
                    chkqty,
                    ng1,
                    ng2,
                    ng3,
                    ng4,
                    ng5,
                    ng6,
                    ng7,
                    ng8,
                    ng9,
                    ng10,
                    ng11,
                    ng12,
                    ng13,
                    ng14,
                    ng15,
                    ng16,
                    ng17,
                    ng18,
                    ng19,
                    ng20,
                    ng21,
                    chkusr,
                    cls,
                    actmch}, callback, asyncState);
        }

        /// <remarks/>
        public string Endset_tait_fqctest(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void set_tait_fqctestAsync(
                    string usr,
                    string pwd,
                    string makeno,
                    System.DateTime chkdats,
                    System.DateTime chkdate,
                    string itnbr,
                    string fixnr,
                    string ridno,
                    int chkqty,
                    int ng1,
                    int ng2,
                    int ng3,
                    int ng4,
                    int ng5,
                    int ng6,
                    int ng7,
                    int ng8,
                    int ng9,
                    int ng10,
                    int ng11,
                    int ng12,
                    int ng13,
                    int ng14,
                    int ng15,
                    int ng16,
                    int ng17,
                    int ng18,
                    int ng19,
                    int ng20,
                    int ng21,
                    string chkusr,
                    string cls,
                    string actmch)
        {
            this.set_tait_fqctestAsync(usr, pwd, makeno, chkdats, chkdate, itnbr, fixnr, ridno, chkqty, ng1, ng2, ng3, ng4, ng5, ng6, ng7, ng8, ng9, ng10, ng11, ng12, ng13, ng14, ng15, ng16, ng17, ng18, ng19, ng20, ng21, chkusr, cls, actmch, null);
        }

        /// <remarks/>
        public void set_tait_fqctestAsync(
                    string usr,
                    string pwd,
                    string makeno,
                    System.DateTime chkdats,
                    System.DateTime chkdate,
                    string itnbr,
                    string fixnr,
                    string ridno,
                    int chkqty,
                    int ng1,
                    int ng2,
                    int ng3,
                    int ng4,
                    int ng5,
                    int ng6,
                    int ng7,
                    int ng8,
                    int ng9,
                    int ng10,
                    int ng11,
                    int ng12,
                    int ng13,
                    int ng14,
                    int ng15,
                    int ng16,
                    int ng17,
                    int ng18,
                    int ng19,
                    int ng20,
                    int ng21,
                    string chkusr,
                    string cls,
                    string actmch,
                    object userState)
        {
            if ((this.set_tait_fqctestOperationCompleted == null))
            {
                this.set_tait_fqctestOperationCompleted = new System.Threading.SendOrPostCallback(this.Onset_tait_fqctestOperationCompleted);
            }
            this.InvokeAsync("set_tait_fqctest", new object[] {
                    usr,
                    pwd,
                    makeno,
                    chkdats,
                    chkdate,
                    itnbr,
                    fixnr,
                    ridno,
                    chkqty,
                    ng1,
                    ng2,
                    ng3,
                    ng4,
                    ng5,
                    ng6,
                    ng7,
                    ng8,
                    ng9,
                    ng10,
                    ng11,
                    ng12,
                    ng13,
                    ng14,
                    ng15,
                    ng16,
                    ng17,
                    ng18,
                    ng19,
                    ng20,
                    ng21,
                    chkusr,
                    cls,
                    actmch}, this.set_tait_fqctestOperationCompleted, userState);
        }

        private void Onset_tait_fqctestOperationCompleted(object arg)
        {
            if ((this.set_tait_fqctestCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.set_tait_fqctestCompleted(this, new set_tait_fqctestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://192.168.2.3/asrs_test/set_taid_fqctest", RequestNamespace = "http://192.168.2.3/asrs_test/", ResponseNamespace = "http://192.168.2.3/asrs_test/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string set_taid_fqctest(
                    string usr,
                    string pwd,
                    string makeno,
                    System.DateTime chkdats,
                    System.DateTime chkdate,
                    string itnbr,
                    string fixnr,
                    string ridno,
                    int chkqty,
                    int ng1,
                    int ng2,
                    int ng3,
                    int ng4,
                    int ng5,
                    int ng6,
                    int ng7,
                    int ng8,
                    int ng9,
                    int ng10,
                    int ng11,
                    int ng12,
                    int ng13,
                    int ng14,
                    int ng15,
                    int ng16,
                    int ng17,
                    int ng18,
                    int ng19,
                    int ng20,
                    int ng21,
                    string chkusr,
                    string cls,
                    string actmch)
        {
            object[] results = this.Invoke("set_taid_fqctest", new object[] {
                    usr,
                    pwd,
                    makeno,
                    chkdats,
                    chkdate,
                    itnbr,
                    fixnr,
                    ridno,
                    chkqty,
                    ng1,
                    ng2,
                    ng3,
                    ng4,
                    ng5,
                    ng6,
                    ng7,
                    ng8,
                    ng9,
                    ng10,
                    ng11,
                    ng12,
                    ng13,
                    ng14,
                    ng15,
                    ng16,
                    ng17,
                    ng18,
                    ng19,
                    ng20,
                    ng21,
                    chkusr,
                    cls,
                    actmch});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult Beginset_taid_fqctest(
                    string usr,
                    string pwd,
                    string makeno,
                    System.DateTime chkdats,
                    System.DateTime chkdate,
                    string itnbr,
                    string fixnr,
                    string ridno,
                    int chkqty,
                    int ng1,
                    int ng2,
                    int ng3,
                    int ng4,
                    int ng5,
                    int ng6,
                    int ng7,
                    int ng8,
                    int ng9,
                    int ng10,
                    int ng11,
                    int ng12,
                    int ng13,
                    int ng14,
                    int ng15,
                    int ng16,
                    int ng17,
                    int ng18,
                    int ng19,
                    int ng20,
                    int ng21,
                    string chkusr,
                    string cls,
                    string actmch,
                    System.AsyncCallback callback,
                    object asyncState)
        {
            return this.BeginInvoke("set_taid_fqctest", new object[] {
                    usr,
                    pwd,
                    makeno,
                    chkdats,
                    chkdate,
                    itnbr,
                    fixnr,
                    ridno,
                    chkqty,
                    ng1,
                    ng2,
                    ng3,
                    ng4,
                    ng5,
                    ng6,
                    ng7,
                    ng8,
                    ng9,
                    ng10,
                    ng11,
                    ng12,
                    ng13,
                    ng14,
                    ng15,
                    ng16,
                    ng17,
                    ng18,
                    ng19,
                    ng20,
                    ng21,
                    chkusr,
                    cls,
                    actmch}, callback, asyncState);
        }

        /// <remarks/>
        public string Endset_taid_fqctest(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void set_taid_fqctestAsync(
                    string usr,
                    string pwd,
                    string makeno,
                    System.DateTime chkdats,
                    System.DateTime chkdate,
                    string itnbr,
                    string fixnr,
                    string ridno,
                    int chkqty,
                    int ng1,
                    int ng2,
                    int ng3,
                    int ng4,
                    int ng5,
                    int ng6,
                    int ng7,
                    int ng8,
                    int ng9,
                    int ng10,
                    int ng11,
                    int ng12,
                    int ng13,
                    int ng14,
                    int ng15,
                    int ng16,
                    int ng17,
                    int ng18,
                    int ng19,
                    int ng20,
                    int ng21,
                    string chkusr,
                    string cls,
                    string actmch)
        {
            this.set_taid_fqctestAsync(usr, pwd, makeno, chkdats, chkdate, itnbr, fixnr, ridno, chkqty, ng1, ng2, ng3, ng4, ng5, ng6, ng7, ng8, ng9, ng10, ng11, ng12, ng13, ng14, ng15, ng16, ng17, ng18, ng19, ng20, ng21, chkusr, cls, actmch, null);
        }

        /// <remarks/>
        public void set_taid_fqctestAsync(
                    string usr,
                    string pwd,
                    string makeno,
                    System.DateTime chkdats,
                    System.DateTime chkdate,
                    string itnbr,
                    string fixnr,
                    string ridno,
                    int chkqty,
                    int ng1,
                    int ng2,
                    int ng3,
                    int ng4,
                    int ng5,
                    int ng6,
                    int ng7,
                    int ng8,
                    int ng9,
                    int ng10,
                    int ng11,
                    int ng12,
                    int ng13,
                    int ng14,
                    int ng15,
                    int ng16,
                    int ng17,
                    int ng18,
                    int ng19,
                    int ng20,
                    int ng21,
                    string chkusr,
                    string cls,
                    string actmch,
                    object userState)
        {
            if ((this.set_taid_fqctestOperationCompleted == null))
            {
                this.set_taid_fqctestOperationCompleted = new System.Threading.SendOrPostCallback(this.Onset_taid_fqctestOperationCompleted);
            }
            this.InvokeAsync("set_taid_fqctest", new object[] {
                    usr,
                    pwd,
                    makeno,
                    chkdats,
                    chkdate,
                    itnbr,
                    fixnr,
                    ridno,
                    chkqty,
                    ng1,
                    ng2,
                    ng3,
                    ng4,
                    ng5,
                    ng6,
                    ng7,
                    ng8,
                    ng9,
                    ng10,
                    ng11,
                    ng12,
                    ng13,
                    ng14,
                    ng15,
                    ng16,
                    ng17,
                    ng18,
                    ng19,
                    ng20,
                    ng21,
                    chkusr,
                    cls,
                    actmch}, this.set_taid_fqctestOperationCompleted, userState);
        }

        private void Onset_taid_fqctestOperationCompleted(object arg)
        {
            if ((this.set_taid_fqctestCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.set_taid_fqctestCompleted(this, new set_taid_fqctestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://192.168.2.3/asrs_test/set_tais_fqctest", RequestNamespace = "http://192.168.2.3/asrs_test/", ResponseNamespace = "http://192.168.2.3/asrs_test/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string set_tais_fqctest(
                    string usr,
                    string pwd,
                    string makeno,
                    System.DateTime chkdats,
                    System.DateTime chkdate,
                    string itnbr,
                    string fixnr,
                    string ridno,
                    int chkqty,
                    int ng1,
                    int ng2,
                    int ng3,
                    int ng4,
                    int ng5,
                    int ng6,
                    int ng7,
                    int ng8,
                    int ng9,
                    int ng10,
                    int ng11,
                    int ng12,
                    int ng13,
                    int ng14,
                    int ng15,
                    int ng16,
                    int ng17,
                    int ng18,
                    int ng19,
                    int ng20,
                    int ng21,
                    string chkusr,
                    string cls,
                    string actmch)
        {
            object[] results = this.Invoke("set_tais_fqctest", new object[] {
                    usr,
                    pwd,
                    makeno,
                    chkdats,
                    chkdate,
                    itnbr,
                    fixnr,
                    ridno,
                    chkqty,
                    ng1,
                    ng2,
                    ng3,
                    ng4,
                    ng5,
                    ng6,
                    ng7,
                    ng8,
                    ng9,
                    ng10,
                    ng11,
                    ng12,
                    ng13,
                    ng14,
                    ng15,
                    ng16,
                    ng17,
                    ng18,
                    ng19,
                    ng20,
                    ng21,
                    chkusr,
                    cls,
                    actmch});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult Beginset_tais_fqctest(
                    string usr,
                    string pwd,
                    string makeno,
                    System.DateTime chkdats,
                    System.DateTime chkdate,
                    string itnbr,
                    string fixnr,
                    string ridno,
                    int chkqty,
                    int ng1,
                    int ng2,
                    int ng3,
                    int ng4,
                    int ng5,
                    int ng6,
                    int ng7,
                    int ng8,
                    int ng9,
                    int ng10,
                    int ng11,
                    int ng12,
                    int ng13,
                    int ng14,
                    int ng15,
                    int ng16,
                    int ng17,
                    int ng18,
                    int ng19,
                    int ng20,
                    int ng21,
                    string chkusr,
                    string cls,
                    string actmch,
                    System.AsyncCallback callback,
                    object asyncState)
        {
            return this.BeginInvoke("set_tais_fqctest", new object[] {
                    usr,
                    pwd,
                    makeno,
                    chkdats,
                    chkdate,
                    itnbr,
                    fixnr,
                    ridno,
                    chkqty,
                    ng1,
                    ng2,
                    ng3,
                    ng4,
                    ng5,
                    ng6,
                    ng7,
                    ng8,
                    ng9,
                    ng10,
                    ng11,
                    ng12,
                    ng13,
                    ng14,
                    ng15,
                    ng16,
                    ng17,
                    ng18,
                    ng19,
                    ng20,
                    ng21,
                    chkusr,
                    cls,
                    actmch}, callback, asyncState);
        }

        /// <remarks/>
        public string Endset_tais_fqctest(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void set_tais_fqctestAsync(
                    string usr,
                    string pwd,
                    string makeno,
                    System.DateTime chkdats,
                    System.DateTime chkdate,
                    string itnbr,
                    string fixnr,
                    string ridno,
                    int chkqty,
                    int ng1,
                    int ng2,
                    int ng3,
                    int ng4,
                    int ng5,
                    int ng6,
                    int ng7,
                    int ng8,
                    int ng9,
                    int ng10,
                    int ng11,
                    int ng12,
                    int ng13,
                    int ng14,
                    int ng15,
                    int ng16,
                    int ng17,
                    int ng18,
                    int ng19,
                    int ng20,
                    int ng21,
                    string chkusr,
                    string cls,
                    string actmch)
        {
            this.set_tais_fqctestAsync(usr, pwd, makeno, chkdats, chkdate, itnbr, fixnr, ridno, chkqty, ng1, ng2, ng3, ng4, ng5, ng6, ng7, ng8, ng9, ng10, ng11, ng12, ng13, ng14, ng15, ng16, ng17, ng18, ng19, ng20, ng21, chkusr, cls, actmch, null);
        }

        /// <remarks/>
        public void set_tais_fqctestAsync(
                    string usr,
                    string pwd,
                    string makeno,
                    System.DateTime chkdats,
                    System.DateTime chkdate,
                    string itnbr,
                    string fixnr,
                    string ridno,
                    int chkqty,
                    int ng1,
                    int ng2,
                    int ng3,
                    int ng4,
                    int ng5,
                    int ng6,
                    int ng7,
                    int ng8,
                    int ng9,
                    int ng10,
                    int ng11,
                    int ng12,
                    int ng13,
                    int ng14,
                    int ng15,
                    int ng16,
                    int ng17,
                    int ng18,
                    int ng19,
                    int ng20,
                    int ng21,
                    string chkusr,
                    string cls,
                    string actmch,
                    object userState)
        {
            if ((this.set_tais_fqctestOperationCompleted == null))
            {
                this.set_tais_fqctestOperationCompleted = new System.Threading.SendOrPostCallback(this.Onset_tais_fqctestOperationCompleted);
            }
            this.InvokeAsync("set_tais_fqctest", new object[] {
                    usr,
                    pwd,
                    makeno,
                    chkdats,
                    chkdate,
                    itnbr,
                    fixnr,
                    ridno,
                    chkqty,
                    ng1,
                    ng2,
                    ng3,
                    ng4,
                    ng5,
                    ng6,
                    ng7,
                    ng8,
                    ng9,
                    ng10,
                    ng11,
                    ng12,
                    ng13,
                    ng14,
                    ng15,
                    ng16,
                    ng17,
                    ng18,
                    ng19,
                    ng20,
                    ng21,
                    chkusr,
                    cls,
                    actmch}, this.set_tais_fqctestOperationCompleted, userState);
        }

        private void Onset_tais_fqctestOperationCompleted(object arg)
        {
            if ((this.set_tais_fqctestCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.set_tais_fqctestCompleted(this, new set_tais_fqctestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://192.168.2.3/asrs_test/set_tais_aoitest", RequestNamespace = "http://192.168.2.3/asrs_test/", ResponseNamespace = "http://192.168.2.3/asrs_test/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string set_tais_aoitest(
                    string usr,
                    string pwd,
                    string makeno,
                    System.DateTime fshdat,
                    System.DateTime chkdats,
                    System.DateTime chkdate,
                    string itnbr,
                    string manno,
                    int inqty,
                    int ngqty,
                    int spqty,
                    int ng1,
                    int ng2,
                    int ng3,
                    int ng4,
                    int ng5,
                    int ng6,
                    int ng7,
                    int ng8,
                    int ng9,
                    string chkusr,
                    string cls,
                    string actmch)
        {
            object[] results = this.Invoke("set_tais_aoitest", new object[] {
                    usr,
                    pwd,
                    makeno,
                    fshdat,
                    chkdats,
                    chkdate,
                    itnbr,
                    manno,
                    inqty,
                    ngqty,
                    spqty,
                    ng1,
                    ng2,
                    ng3,
                    ng4,
                    ng5,
                    ng6,
                    ng7,
                    ng8,
                    ng9,
                    chkusr,
                    cls,
                    actmch});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult Beginset_tais_aoitest(
                    string usr,
                    string pwd,
                    string makeno,
                    System.DateTime fshdat,
                    System.DateTime chkdats,
                    System.DateTime chkdate,
                    string itnbr,
                    string manno,
                    int inqty,
                    int ngqty,
                    int spqty,
                    int ng1,
                    int ng2,
                    int ng3,
                    int ng4,
                    int ng5,
                    int ng6,
                    int ng7,
                    int ng8,
                    int ng9,
                    string chkusr,
                    string cls,
                    string actmch,
                    System.AsyncCallback callback,
                    object asyncState)
        {
            return this.BeginInvoke("set_tais_aoitest", new object[] {
                    usr,
                    pwd,
                    makeno,
                    fshdat,
                    chkdats,
                    chkdate,
                    itnbr,
                    manno,
                    inqty,
                    ngqty,
                    spqty,
                    ng1,
                    ng2,
                    ng3,
                    ng4,
                    ng5,
                    ng6,
                    ng7,
                    ng8,
                    ng9,
                    chkusr,
                    cls,
                    actmch}, callback, asyncState);
        }

        /// <remarks/>
        public string Endset_tais_aoitest(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void set_tais_aoitestAsync(
                    string usr,
                    string pwd,
                    string makeno,
                    System.DateTime fshdat,
                    System.DateTime chkdats,
                    System.DateTime chkdate,
                    string itnbr,
                    string manno,
                    int inqty,
                    int ngqty,
                    int spqty,
                    int ng1,
                    int ng2,
                    int ng3,
                    int ng4,
                    int ng5,
                    int ng6,
                    int ng7,
                    int ng8,
                    int ng9,
                    string chkusr,
                    string cls,
                    string actmch)
        {
            this.set_tais_aoitestAsync(usr, pwd, makeno, fshdat, chkdats, chkdate, itnbr, manno, inqty, ngqty, spqty, ng1, ng2, ng3, ng4, ng5, ng6, ng7, ng8, ng9, chkusr, cls, actmch, null);
        }

        /// <remarks/>
        public void set_tais_aoitestAsync(
                    string usr,
                    string pwd,
                    string makeno,
                    System.DateTime fshdat,
                    System.DateTime chkdats,
                    System.DateTime chkdate,
                    string itnbr,
                    string manno,
                    int inqty,
                    int ngqty,
                    int spqty,
                    int ng1,
                    int ng2,
                    int ng3,
                    int ng4,
                    int ng5,
                    int ng6,
                    int ng7,
                    int ng8,
                    int ng9,
                    string chkusr,
                    string cls,
                    string actmch,
                    object userState)
        {
            if ((this.set_tais_aoitestOperationCompleted == null))
            {
                this.set_tais_aoitestOperationCompleted = new System.Threading.SendOrPostCallback(this.Onset_tais_aoitestOperationCompleted);
            }
            this.InvokeAsync("set_tais_aoitest", new object[] {
                    usr,
                    pwd,
                    makeno,
                    fshdat,
                    chkdats,
                    chkdate,
                    itnbr,
                    manno,
                    inqty,
                    ngqty,
                    spqty,
                    ng1,
                    ng2,
                    ng3,
                    ng4,
                    ng5,
                    ng6,
                    ng7,
                    ng8,
                    ng9,
                    chkusr,
                    cls,
                    actmch}, this.set_tais_aoitestOperationCompleted, userState);
        }

        private void Onset_tais_aoitestOperationCompleted(object arg)
        {
            if ((this.set_tais_aoitestCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.set_tais_aoitestCompleted(this, new set_tais_aoitestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://192.168.2.3/asrs_test/get_invtrn", RequestNamespace = "http://192.168.2.3/asrs_test/", ResponseNamespace = "http://192.168.2.3/asrs_test/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet get_invtrn(string trno, string ctyp)
        {
            object[] results = this.Invoke("get_invtrn", new object[] {
                    trno,
                    ctyp});
            return ((System.Data.DataSet)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult Beginget_invtrn(string trno, string ctyp, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("get_invtrn", new object[] {
                    trno,
                    ctyp}, callback, asyncState);
        }

        /// <remarks/>
        public System.Data.DataSet Endget_invtrn(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }

        /// <remarks/>
        public void get_invtrnAsync(string trno, string ctyp)
        {
            this.get_invtrnAsync(trno, ctyp, null);
        }

        /// <remarks/>
        public void get_invtrnAsync(string trno, string ctyp, object userState)
        {
            if ((this.get_invtrnOperationCompleted == null))
            {
                this.get_invtrnOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_invtrnOperationCompleted);
            }
            this.InvokeAsync("get_invtrn", new object[] {
                    trno,
                    ctyp}, this.get_invtrnOperationCompleted, userState);
        }

        private void Onget_invtrnOperationCompleted(object arg)
        {
            if ((this.get_invtrnCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.get_invtrnCompleted(this, new get_invtrnCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://192.168.2.3/asrs_test/get_wipqty", RequestNamespace = "http://192.168.2.3/asrs_test/", ResponseNamespace = "http://192.168.2.3/asrs_test/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet get_wipqty(string manno)
        {
            object[] results = this.Invoke("get_wipqty", new object[] {
                    manno});
            return ((System.Data.DataSet)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult Beginget_wipqty(string manno, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("get_wipqty", new object[] {
                    manno}, callback, asyncState);
        }

        /// <remarks/>
        public System.Data.DataSet Endget_wipqty(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }

        /// <remarks/>
        public void get_wipqtyAsync(string manno)
        {
            this.get_wipqtyAsync(manno, null);
        }

        /// <remarks/>
        public void get_wipqtyAsync(string manno, object userState)
        {
            if ((this.get_wipqtyOperationCompleted == null))
            {
                this.get_wipqtyOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_wipqtyOperationCompleted);
            }
            this.InvokeAsync("get_wipqty", new object[] {
                    manno}, this.get_wipqtyOperationCompleted, userState);
        }

        private void Onget_wipqtyOperationCompleted(object arg)
        {
            if ((this.get_wipqtyCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.get_wipqtyCompleted(this, new get_wipqtyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://192.168.2.3/asrs_test/get_invbat", RequestNamespace = "http://192.168.2.3/asrs_test/", ResponseNamespace = "http://192.168.2.3/asrs_test/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet get_invbat(string fixnr, string itnbr)
        {
            object[] results = this.Invoke("get_invbat", new object[] {
                    fixnr,
                    itnbr});
            return ((System.Data.DataSet)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult Beginget_invbat(string fixnr, string itnbr, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("get_invbat", new object[] {
                    fixnr,
                    itnbr}, callback, asyncState);
        }

        /// <remarks/>
        public System.Data.DataSet Endget_invbat(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }

        /// <remarks/>
        public void get_invbatAsync(string fixnr, string itnbr)
        {
            this.get_invbatAsync(fixnr, itnbr, null);
        }

        /// <remarks/>
        public void get_invbatAsync(string fixnr, string itnbr, object userState)
        {
            if ((this.get_invbatOperationCompleted == null))
            {
                this.get_invbatOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_invbatOperationCompleted);
            }
            this.InvokeAsync("get_invbat", new object[] {
                    fixnr,
                    itnbr}, this.get_invbatOperationCompleted, userState);
        }

        private void Onget_invbatOperationCompleted(object arg)
        {
            if ((this.get_invbatCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.get_invbatCompleted(this, new get_invbatCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://192.168.2.3/asrs_test/get_invmas", RequestNamespace = "http://192.168.2.3/asrs_test/", ResponseNamespace = "http://192.168.2.3/asrs_test/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet get_invmas(string itnbr)
        {
            object[] results = this.Invoke("get_invmas", new object[] {
                    itnbr});
            return ((System.Data.DataSet)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult Beginget_invmas(string itnbr, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("get_invmas", new object[] {
                    itnbr}, callback, asyncState);
        }

        /// <remarks/>
        public System.Data.DataSet Endget_invmas(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }

        /// <remarks/>
        public void get_invmasAsync(string itnbr)
        {
            this.get_invmasAsync(itnbr, null);
        }

        /// <remarks/>
        public void get_invmasAsync(string itnbr, object userState)
        {
            if ((this.get_invmasOperationCompleted == null))
            {
                this.get_invmasOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_invmasOperationCompleted);
            }
            this.InvokeAsync("get_invmas", new object[] {
                    itnbr}, this.get_invmasOperationCompleted, userState);
        }

        private void Onget_invmasOperationCompleted(object arg)
        {
            if ((this.get_invmasCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.get_invmasCompleted(this, new get_invmasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://192.168.2.3/asrs_test/get_cdrqty", RequestNamespace = "http://192.168.2.3/asrs_test/", ResponseNamespace = "http://192.168.2.3/asrs_test/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string get_cdrqty(string itnbr)
        {
            object[] results = this.Invoke("get_cdrqty", new object[] {
                    itnbr});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult Beginget_cdrqty(string itnbr, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("get_cdrqty", new object[] {
                    itnbr}, callback, asyncState);
        }

        /// <remarks/>
        public string Endget_cdrqty(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void get_cdrqtyAsync(string itnbr)
        {
            this.get_cdrqtyAsync(itnbr, null);
        }

        /// <remarks/>
        public void get_cdrqtyAsync(string itnbr, object userState)
        {
            if ((this.get_cdrqtyOperationCompleted == null))
            {
                this.get_cdrqtyOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_cdrqtyOperationCompleted);
            }
            this.InvokeAsync("get_cdrqty", new object[] {
                    itnbr}, this.get_cdrqtyOperationCompleted, userState);
        }

        private void Onget_cdrqtyOperationCompleted(object arg)
        {
            if ((this.get_cdrqtyCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.get_cdrqtyCompleted(this, new get_cdrqtyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://192.168.2.3/asrs_test/set_invauto", RequestNamespace = "http://192.168.2.3/asrs_test/", ResponseNamespace = "http://192.168.2.3/asrs_test/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string set_invauto(string manno, string userid, string locat, string iocode, string sfcpef)
        {
            object[] results = this.Invoke("set_invauto", new object[] {
                    manno,
                    userid,
                    locat,
                    iocode,
                    sfcpef});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult Beginset_invauto(string manno, string userid, string locat, string iocode, string sfcpef, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("set_invauto", new object[] {
                    manno,
                    userid,
                    locat,
                    iocode,
                    sfcpef}, callback, asyncState);
        }

        /// <remarks/>
        public string Endset_invauto(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void set_invautoAsync(string manno, string userid, string locat, string iocode, string sfcpef)
        {
            this.set_invautoAsync(manno, userid, locat, iocode, sfcpef, null);
        }

        /// <remarks/>
        public void set_invautoAsync(string manno, string userid, string locat, string iocode, string sfcpef, object userState)
        {
            if ((this.set_invautoOperationCompleted == null))
            {
                this.set_invautoOperationCompleted = new System.Threading.SendOrPostCallback(this.Onset_invautoOperationCompleted);
            }
            this.InvokeAsync("set_invauto", new object[] {
                    manno,
                    userid,
                    locat,
                    iocode,
                    sfcpef}, this.set_invautoOperationCompleted, userState);
        }

        private void Onset_invautoOperationCompleted(object arg)
        {
            if ((this.set_invautoCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.set_invautoCompleted(this, new set_invautoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://192.168.2.3/asrs_test/get_stats", RequestNamespace = "http://192.168.2.3/asrs_test/", ResponseNamespace = "http://192.168.2.3/asrs_test/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string get_stats(string actmch)
        {
            object[] results = this.Invoke("get_stats", new object[] {
                    actmch});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult Beginget_stats(string actmch, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("get_stats", new object[] {
                    actmch}, callback, asyncState);
        }

        /// <remarks/>
        public string Endget_stats(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void get_statsAsync(string actmch)
        {
            this.get_statsAsync(actmch, null);
        }

        /// <remarks/>
        public void get_statsAsync(string actmch, object userState)
        {
            if ((this.get_statsOperationCompleted == null))
            {
                this.get_statsOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_statsOperationCompleted);
            }
            this.InvokeAsync("get_stats", new object[] {
                    actmch}, this.get_statsOperationCompleted, userState);
        }

        private void Onget_statsOperationCompleted(object arg)
        {
            if ((this.get_statsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.get_statsCompleted(this, new get_statsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://192.168.2.3/asrs_test/send_mail", RequestNamespace = "http://192.168.2.3/asrs_test/", ResponseNamespace = "http://192.168.2.3/asrs_test/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string send_mail(string usr, string pwd, string actmch)
        {
            object[] results = this.Invoke("send_mail", new object[] {
                    usr,
                    pwd,
                    actmch});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult Beginsend_mail(string usr, string pwd, string actmch, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("send_mail", new object[] {
                    usr,
                    pwd,
                    actmch}, callback, asyncState);
        }

        /// <remarks/>
        public string Endsend_mail(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void send_mailAsync(string usr, string pwd, string actmch)
        {
            this.send_mailAsync(usr, pwd, actmch, null);
        }

        /// <remarks/>
        public void send_mailAsync(string usr, string pwd, string actmch, object userState)
        {
            if ((this.send_mailOperationCompleted == null))
            {
                this.send_mailOperationCompleted = new System.Threading.SendOrPostCallback(this.Onsend_mailOperationCompleted);
            }
            this.InvokeAsync("send_mail", new object[] {
                    usr,
                    pwd,
                    actmch}, this.send_mailOperationCompleted, userState);
        }

        private void Onsend_mailOperationCompleted(object arg)
        {
            if ((this.send_mailCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.send_mailCompleted(this, new send_mailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://192.168.2.3/asrs_test/set_plactmch", RequestNamespace = "http://192.168.2.3/asrs_test/", ResponseNamespace = "http://192.168.2.3/asrs_test/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string set_plactmch(string usr, string pwd, string actmch)
        {
            object[] results = this.Invoke("set_plactmch", new object[] {
                    usr,
                    pwd,
                    actmch});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult Beginset_plactmch(string usr, string pwd, string actmch, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("set_plactmch", new object[] {
                    usr,
                    pwd,
                    actmch}, callback, asyncState);
        }

        /// <remarks/>
        public string Endset_plactmch(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void set_plactmchAsync(string usr, string pwd, string actmch)
        {
            this.set_plactmchAsync(usr, pwd, actmch, null);
        }

        /// <remarks/>
        public void set_plactmchAsync(string usr, string pwd, string actmch, object userState)
        {
            if ((this.set_plactmchOperationCompleted == null))
            {
                this.set_plactmchOperationCompleted = new System.Threading.SendOrPostCallback(this.Onset_plactmchOperationCompleted);
            }
            this.InvokeAsync("set_plactmch", new object[] {
                    usr,
                    pwd,
                    actmch}, this.set_plactmchOperationCompleted, userState);
        }

        private void Onset_plactmchOperationCompleted(object arg)
        {
            if ((this.set_plactmchCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.set_plactmchCompleted(this, new set_plactmchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://192.168.2.3/asrs_test/Set_getplparm", RequestNamespace = "http://192.168.2.3/asrs_test/", ResponseNamespace = "http://192.168.2.3/asrs_test/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Set_getplparm(string manno, string actmch)
        {
            object[] results = this.Invoke("Set_getplparm", new object[] {
                    manno,
                    actmch});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginSet_getplparm(string manno, string actmch, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("Set_getplparm", new object[] {
                    manno,
                    actmch}, callback, asyncState);
        }

        /// <remarks/>
        public string EndSet_getplparm(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void Set_getplparmAsync(string manno, string actmch)
        {
            this.Set_getplparmAsync(manno, actmch, null);
        }

        /// <remarks/>
        public void Set_getplparmAsync(string manno, string actmch, object userState)
        {
            if ((this.Set_getplparmOperationCompleted == null))
            {
                this.Set_getplparmOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSet_getplparmOperationCompleted);
            }
            this.InvokeAsync("Set_getplparm", new object[] {
                    manno,
                    actmch}, this.Set_getplparmOperationCompleted, userState);
        }

        private void OnSet_getplparmOperationCompleted(object arg)
        {
            if ((this.Set_getplparmCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Set_getplparmCompleted(this, new Set_getplparmCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        public new void CancelAsync(object userState)
        {
            base.CancelAsync(userState);
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    public delegate void set_tait_fqctestCompletedEventHandler(object sender, set_tait_fqctestCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class set_tait_fqctestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal set_tait_fqctestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    public delegate void set_taid_fqctestCompletedEventHandler(object sender, set_taid_fqctestCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class set_taid_fqctestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal set_taid_fqctestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    public delegate void set_tais_fqctestCompletedEventHandler(object sender, set_tais_fqctestCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class set_tais_fqctestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal set_tais_fqctestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    public delegate void set_tais_aoitestCompletedEventHandler(object sender, set_tais_aoitestCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class set_tais_aoitestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal set_tais_aoitestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    public delegate void get_invtrnCompletedEventHandler(object sender, get_invtrnCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class get_invtrnCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal get_invtrnCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public System.Data.DataSet Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    public delegate void get_wipqtyCompletedEventHandler(object sender, get_wipqtyCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class get_wipqtyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal get_wipqtyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public System.Data.DataSet Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    public delegate void get_invbatCompletedEventHandler(object sender, get_invbatCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class get_invbatCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal get_invbatCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public System.Data.DataSet Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    public delegate void get_invmasCompletedEventHandler(object sender, get_invmasCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class get_invmasCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal get_invmasCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public System.Data.DataSet Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    public delegate void get_cdrqtyCompletedEventHandler(object sender, get_cdrqtyCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class get_cdrqtyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal get_cdrqtyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    public delegate void set_invautoCompletedEventHandler(object sender, set_invautoCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class set_invautoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal set_invautoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    public delegate void get_statsCompletedEventHandler(object sender, get_statsCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class get_statsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal get_statsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    public delegate void send_mailCompletedEventHandler(object sender, send_mailCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class send_mailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal send_mailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    public delegate void set_plactmchCompletedEventHandler(object sender, set_plactmchCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class set_plactmchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal set_plactmchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    public delegate void Set_getplparmCompletedEventHandler(object sender, Set_getplparmCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Set_getplparmCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal Set_getplparmCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

}